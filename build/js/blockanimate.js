function timeout(){$(document).ready(function(){$("img").addClass("animate-static"),$(".link").addClass("animate-static");for(var t=0;t<pages.first.length;t++)!function(t){setTimeout(function(){$("#"+pages.first[t]).addClass("animate-text")},500*t)}(t);$(window).bind("hashchange",function(){setTimeout(function(){var t=$(".main").attr("id");console.log(t),$("img").addClass("animate-static"),$(".link").addClass("animate-static");for(var a=0;a<pages[t].length;a++)!function(a){setTimeout(function(){$("#"+pages[t][a]).addClass("animate-text")},500*a)}(a)},20)})})}var pages={first:["what-1","what-2","what-3"],second:["what-4","what-5","what-6"],error:["error-1","error-2"],who:["who-1","who-2","who-3"]};setTimeout(timeout,500),$(document).undelegate(".transferLink","click").delegate(".transferLink","click",function(){setTimeout(function(){var t=$(".main").attr("id");$("img").addClass("animate-static"),$(".link").addClass("animate-static");for(var a=0;a<pages[t].length;a++)!function(a){setTimeout(function(){$("#"+pages[t][a]).addClass("animate-text")},500*a)}(a)},200)});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2NrYW5pbWF0ZS5qcyJdLCJuYW1lcyI6WyJ0aW1lb3V0IiwiJCIsImRvY3VtZW50IiwicmVhZHkiLCJhZGRDbGFzcyIsIml0ZW0iLCJwYWdlcyIsImZpcnN0IiwibGVuZ3RoIiwiaW5kZXgiLCJzZXRUaW1lb3V0Iiwid2luZG93IiwiYmluZCIsInBhZ2UiLCJhdHRyIiwiY29uc29sZSIsImxvZyIsInNlY29uZCIsImVycm9yIiwid2hvIiwidW5kZWxlZ2F0ZSIsImRlbGVnYXRlIiwicGFnZUNsaWNrIl0sIm1hcHBpbmdzIjoiQUF3QkEsUUFBU0EsV0FDTEMsRUFBRUMsVUFBVUMsTUFBTSxXQUNkRixFQUFFLE9BQU9HLFNBQVMsa0JBQ2xCSCxFQUFFLFNBQVNHLFNBQVMsaUJBQ3BCLEtBQUssR0FBSUMsR0FBTyxFQUFHQSxFQUFPQyxNQUFNQyxNQUFNQyxPQUFRSCxLQUMxQyxTQUFXSSxHQUNQQyxXQUFXLFdBQ1BULEVBQUUsSUFBTUssTUFBTUMsTUFBTUUsSUFBUUwsU0FBUyxpQkFDOUIsSUFBUkssSUFDSkosRUFFUEosR0FBRVUsUUFBUUMsS0FBSyxhQUFjLFdBQ3pCRixXQUFXLFdBQ1AsR0FBSUcsR0FBT1osRUFBRSxTQUFTYSxLQUFLLEtBQzNCQyxTQUFRQyxJQUFJSCxHQUNaWixFQUFFLE9BQU9HLFNBQVMsa0JBQ2xCSCxFQUFFLFNBQVNHLFNBQVMsaUJBQ3BCLEtBQUssR0FBSUMsR0FBTyxFQUFHQSxFQUFPQyxNQUFNTyxHQUFNTCxPQUFRSCxLQUMxQyxTQUFXSSxHQUNQQyxXQUFXLFdBQ1BULEVBQUUsSUFBTUssTUFBTU8sR0FBTUosSUFBUUwsU0FBUyxpQkFDOUIsSUFBUkssSUFDSkosSUFFUixRQWhEZixHQUFJQyxRQUNBQyxPQUNJLFNBQ0EsU0FDQSxVQUVKVSxRQUNJLFNBQ0EsU0FDQSxVQUVKQyxPQUNJLFVBQ0EsV0FFSkMsS0FDSSxRQUNBLFFBQ0EsU0FJUlQsWUFBV1YsUUFBUyxLQStCcEJDLEVBQUVDLFVBQVVrQixXQUFXLGdCQUFpQixTQUFTQyxTQUFTLGdCQUFpQixRQUFTLFdBQ2hGWCxXQUFXLFdBQ1AsR0FBSVksR0FBWXJCLEVBQUUsU0FBU2EsS0FBSyxLQUNoQ2IsR0FBRSxPQUFPRyxTQUFTLGtCQUNsQkgsRUFBRSxTQUFTRyxTQUFTLGlCQUNwQixLQUFLLEdBQUlDLEdBQU8sRUFBR0EsRUFBT0MsTUFBTWdCLEdBQVdkLE9BQVFILEtBQy9DLFNBQVdJLEdBQ1BDLFdBQVcsV0FDUFQsRUFBRSxJQUFNSyxNQUFNZ0IsR0FBV2IsSUFBUUwsU0FBUyxpQkFDbkMsSUFBUkssSUFDSkosSUFFUiIsImZpbGUiOiJibG9ja2FuaW1hdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcGFnZXMgPSB7XG4gICAgZmlyc3Q6W1xuICAgICAgICBcIndoYXQtMVwiLFxuICAgICAgICBcIndoYXQtMlwiLFxuICAgICAgICBcIndoYXQtM1wiXG4gICAgXSxcbiAgICBzZWNvbmQ6W1xuICAgICAgICBcIndoYXQtNFwiLFxuICAgICAgICBcIndoYXQtNVwiLFxuICAgICAgICBcIndoYXQtNlwiXG4gICAgXSxcbiAgICBlcnJvcjogW1xuICAgICAgICBcImVycm9yLTFcIixcbiAgICAgICAgXCJlcnJvci0yXCJcbiAgICBdLFxuICAgIHdobzpbXG4gICAgICAgIFwid2hvLTFcIixcbiAgICAgICAgXCJ3aG8tMlwiLFxuICAgICAgICBcIndoby0zXCJcbiAgICBdXG59O1xuXG5zZXRUaW1lb3V0KHRpbWVvdXQsIDUwMCk7XG5cbmZ1bmN0aW9uIHRpbWVvdXQgKCkge1xuICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJChcImltZ1wiKS5hZGRDbGFzcyhcImFuaW1hdGUtc3RhdGljXCIpO1xuICAgICAgICAkKFwiLmxpbmtcIikuYWRkQ2xhc3MoXCJhbmltYXRlLXN0YXRpY1wiKTtcbiAgICAgICAgZm9yICh2YXIgaXRlbSA9IDA7IGl0ZW0gPCBwYWdlcy5maXJzdC5sZW5ndGg7IGl0ZW0rKykge1xuICAgICAgICAgICAgKGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAkKFwiI1wiICsgcGFnZXMuZmlyc3RbaW5kZXhdKS5hZGRDbGFzcygnYW5pbWF0ZS10ZXh0Jyk7XG4gICAgICAgICAgICAgICAgfSwgaW5kZXggKiA1MDApO1xuICAgICAgICAgICAgfSkoaXRlbSk7XG4gICAgICAgIH1cbiAgICAgICAgJCh3aW5kb3cpLmJpbmQoJ2hhc2hjaGFuZ2UnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBwYWdlID0gJCgnLm1haW4nKS5hdHRyKCdpZCcpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHBhZ2UpO1xuICAgICAgICAgICAgICAgICQoXCJpbWdcIikuYWRkQ2xhc3MoXCJhbmltYXRlLXN0YXRpY1wiKTtcbiAgICAgICAgICAgICAgICAkKFwiLmxpbmtcIikuYWRkQ2xhc3MoXCJhbmltYXRlLXN0YXRpY1wiKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpdGVtID0gMDsgaXRlbSA8IHBhZ2VzW3BhZ2VdLmxlbmd0aDsgaXRlbSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIChmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjXCIgKyBwYWdlc1twYWdlXVtpbmRleF0pLmFkZENsYXNzKCdhbmltYXRlLXRleHQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIGluZGV4ICogNTAwKTtcbiAgICAgICAgICAgICAgICAgICAgfSkoaXRlbSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgMjApO1xuICAgICAgICB9KTtcblxuICAgIH0pO1xufVxuJChkb2N1bWVudCkudW5kZWxlZ2F0ZSgnLnRyYW5zZmVyTGluaycsICdjbGljaycpLmRlbGVnYXRlKCcudHJhbnNmZXJMaW5rJywgJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBwYWdlQ2xpY2sgPSAkKCcubWFpbicpLmF0dHIoJ2lkJyk7XG4gICAgICAgICQoXCJpbWdcIikuYWRkQ2xhc3MoXCJhbmltYXRlLXN0YXRpY1wiKTtcbiAgICAgICAgJChcIi5saW5rXCIpLmFkZENsYXNzKFwiYW5pbWF0ZS1zdGF0aWNcIik7XG4gICAgICAgIGZvciAodmFyIGl0ZW0gPSAwOyBpdGVtIDwgcGFnZXNbcGFnZUNsaWNrXS5sZW5ndGg7IGl0ZW0rKykge1xuICAgICAgICAgICAgKGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAkKFwiI1wiICsgcGFnZXNbcGFnZUNsaWNrXVtpbmRleF0pLmFkZENsYXNzKCdhbmltYXRlLXRleHQnKTtcbiAgICAgICAgICAgICAgICB9LCBpbmRleCAqIDUwMCk7XG4gICAgICAgICAgICB9KShpdGVtKTtcbiAgICAgICAgfVxuICAgIH0sIDIwMCk7XG59KTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=

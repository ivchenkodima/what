function timeout(){$(document).ready(function(){$("img").addClass("animate-static"),$(".link").addClass("animate-static");for(var t=0;t<pages.first.length;t++)!function(t){setTimeout(function(){$("#"+pages.first[t]).addClass("animate-text")},1e3*t)}(t);$(window).bind("hashchange",function(){setTimeout(function(){var t=$(".main").attr("id");$("img").addClass("animate-static"),$(".link").addClass("animate-static");for(var a=0;a<pages[t].length;a++)!function(a){setTimeout(function(){$("#"+pages[t][a]).addClass("animate-text")},1e3*a)}(a)},20)})})}var pages={first:["what-1","what-2","what-3"],second:["what-4","what-5","what-6"],error:["error-1","error-2"],who:["who-1","who-2","who-3"]};setTimeout(timeout,500),$(document).undelegate(".transferLink","click").delegate(".transferLink","click",function(){setTimeout(function(){var t=$(".main").attr("id");$("img").addClass("animate-static"),$(".link").addClass("animate-static");for(var a=0;a<pages[t].length;a++)!function(a){setTimeout(function(){$("#"+pages[t][a]).addClass("animate-text")},1e3*a)}(a)},200)});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2NrYW5pbWF0ZS5qcyJdLCJuYW1lcyI6WyJ0aW1lb3V0IiwiJCIsImRvY3VtZW50IiwicmVhZHkiLCJhZGRDbGFzcyIsIml0ZW0iLCJwYWdlcyIsImZpcnN0IiwibGVuZ3RoIiwiaW5kZXgiLCJzZXRUaW1lb3V0Iiwid2luZG93IiwiYmluZCIsInBhZ2UiLCJhdHRyIiwic2Vjb25kIiwiZXJyb3IiLCJ3aG8iLCJ1bmRlbGVnYXRlIiwiZGVsZWdhdGUiLCJwYWdlQ2xpY2siXSwibWFwcGluZ3MiOiJBQXdCQSxRQUFTQSxXQUNMQyxFQUFFQyxVQUFVQyxNQUFNLFdBQ2RGLEVBQUUsT0FBT0csU0FBUyxrQkFDbEJILEVBQUUsU0FBU0csU0FBUyxpQkFDcEIsS0FBSyxHQUFJQyxHQUFPLEVBQUdBLEVBQU9DLE1BQU1DLE1BQU1DLE9BQVFILEtBQzFDLFNBQVdJLEdBQ1BDLFdBQVcsV0FDUFQsRUFBRSxJQUFNSyxNQUFNQyxNQUFNRSxJQUFRTCxTQUFTLGlCQUM5QixJQUFSSyxJQUNKSixFQUVQSixHQUFFVSxRQUFRQyxLQUFLLGFBQWMsV0FDekJGLFdBQVcsV0FDUCxHQUFJRyxHQUFPWixFQUFFLFNBQVNhLEtBQUssS0FDM0JiLEdBQUUsT0FBT0csU0FBUyxrQkFDbEJILEVBQUUsU0FBU0csU0FBUyxpQkFDcEIsS0FBSyxHQUFJQyxHQUFPLEVBQUdBLEVBQU9DLE1BQU1PLEdBQU1MLE9BQVFILEtBQzFDLFNBQVdJLEdBQ1BDLFdBQVcsV0FDUFQsRUFBRSxJQUFNSyxNQUFNTyxHQUFNSixJQUFRTCxTQUFTLGlCQUM5QixJQUFSSyxJQUNKSixJQUVSLFFBL0NmLEdBQUlDLFFBQ0FDLE9BQ0ksU0FDQSxTQUNBLFVBRUpRLFFBQ0ksU0FDQSxTQUNBLFVBRUpDLE9BQ0ksVUFDQSxXQUVKQyxLQUNJLFFBQ0EsUUFDQSxTQUlSUCxZQUFXVixRQUFTLEtBOEJwQkMsRUFBRUMsVUFBVWdCLFdBQVcsZ0JBQWlCLFNBQVNDLFNBQVMsZ0JBQWlCLFFBQVMsV0FDaEZULFdBQVcsV0FDUCxHQUFJVSxHQUFZbkIsRUFBRSxTQUFTYSxLQUFLLEtBQ2hDYixHQUFFLE9BQU9HLFNBQVMsa0JBQ2xCSCxFQUFFLFNBQVNHLFNBQVMsaUJBQ3BCLEtBQUssR0FBSUMsR0FBTyxFQUFHQSxFQUFPQyxNQUFNYyxHQUFXWixPQUFRSCxLQUMvQyxTQUFXSSxHQUNQQyxXQUFXLFdBQ1BULEVBQUUsSUFBTUssTUFBTWMsR0FBV1gsSUFBUUwsU0FBUyxpQkFDbkMsSUFBUkssSUFDSkosSUFFUiIsImZpbGUiOiJibG9ja2FuaW1hdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcGFnZXMgPSB7XG4gICAgZmlyc3Q6W1xuICAgICAgICBcIndoYXQtMVwiLFxuICAgICAgICBcIndoYXQtMlwiLFxuICAgICAgICBcIndoYXQtM1wiXG4gICAgXSxcbiAgICBzZWNvbmQ6W1xuICAgICAgICBcIndoYXQtNFwiLFxuICAgICAgICBcIndoYXQtNVwiLFxuICAgICAgICBcIndoYXQtNlwiXG4gICAgXSxcbiAgICBlcnJvcjogW1xuICAgICAgICBcImVycm9yLTFcIixcbiAgICAgICAgXCJlcnJvci0yXCJcbiAgICBdLFxuICAgIHdobzpbXG4gICAgICAgIFwid2hvLTFcIixcbiAgICAgICAgXCJ3aG8tMlwiLFxuICAgICAgICBcIndoby0zXCJcbiAgICBdXG59O1xuXG5zZXRUaW1lb3V0KHRpbWVvdXQsIDUwMCk7XG5cbmZ1bmN0aW9uIHRpbWVvdXQgKCkge1xuICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJChcImltZ1wiKS5hZGRDbGFzcyhcImFuaW1hdGUtc3RhdGljXCIpO1xuICAgICAgICAkKFwiLmxpbmtcIikuYWRkQ2xhc3MoXCJhbmltYXRlLXN0YXRpY1wiKTtcbiAgICAgICAgZm9yICh2YXIgaXRlbSA9IDA7IGl0ZW0gPCBwYWdlcy5maXJzdC5sZW5ndGg7IGl0ZW0rKykge1xuICAgICAgICAgICAgKGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAkKFwiI1wiICsgcGFnZXMuZmlyc3RbaW5kZXhdKS5hZGRDbGFzcygnYW5pbWF0ZS10ZXh0Jyk7XG4gICAgICAgICAgICAgICAgfSwgaW5kZXggKiAxMDAwKTtcbiAgICAgICAgICAgIH0pKGl0ZW0pO1xuICAgICAgICB9XG4gICAgICAgICQod2luZG93KS5iaW5kKCdoYXNoY2hhbmdlJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcGFnZSA9ICQoJy5tYWluJykuYXR0cignaWQnKTtcbiAgICAgICAgICAgICAgICAkKFwiaW1nXCIpLmFkZENsYXNzKFwiYW5pbWF0ZS1zdGF0aWNcIik7XG4gICAgICAgICAgICAgICAgJChcIi5saW5rXCIpLmFkZENsYXNzKFwiYW5pbWF0ZS1zdGF0aWNcIik7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaXRlbSA9IDA7IGl0ZW0gPCBwYWdlc1twYWdlXS5sZW5ndGg7IGl0ZW0rKykge1xuICAgICAgICAgICAgICAgICAgICAoZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI1wiICsgcGFnZXNbcGFnZV1baW5kZXhdKS5hZGRDbGFzcygnYW5pbWF0ZS10ZXh0Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBpbmRleCAqIDEwMDApO1xuICAgICAgICAgICAgICAgICAgICB9KShpdGVtKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCAyMCk7XG4gICAgICAgIH0pO1xuXG4gICAgfSk7XG59XG4kKGRvY3VtZW50KS51bmRlbGVnYXRlKCcudHJhbnNmZXJMaW5rJywgJ2NsaWNrJykuZGVsZWdhdGUoJy50cmFuc2ZlckxpbmsnLCAnY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHBhZ2VDbGljayA9ICQoJy5tYWluJykuYXR0cignaWQnKTtcbiAgICAgICAgJChcImltZ1wiKS5hZGRDbGFzcyhcImFuaW1hdGUtc3RhdGljXCIpO1xuICAgICAgICAkKFwiLmxpbmtcIikuYWRkQ2xhc3MoXCJhbmltYXRlLXN0YXRpY1wiKTtcbiAgICAgICAgZm9yICh2YXIgaXRlbSA9IDA7IGl0ZW0gPCBwYWdlc1twYWdlQ2xpY2tdLmxlbmd0aDsgaXRlbSsrKSB7XG4gICAgICAgICAgICAoZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICQoXCIjXCIgKyBwYWdlc1twYWdlQ2xpY2tdW2luZGV4XSkuYWRkQ2xhc3MoJ2FuaW1hdGUtdGV4dCcpO1xuICAgICAgICAgICAgICAgIH0sIGluZGV4ICogMTAwMCk7XG4gICAgICAgICAgICB9KShpdGVtKTtcbiAgICAgICAgfVxuICAgIH0sIDIwMCk7XG59KTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
